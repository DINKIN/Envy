
bitprint:AAAAAAAAAA0BBBBB

Base64: (6bits/char)

0987654321
XXXXXXXXXX 1,152,921,504,606,846,976		60bit
0XXXXXXXXX    18,014,398,509,481,984
  XXXXXXXX       281,474,976,710,656	256tb	48bit
  0XXXXXXX         4,398,046,511,104	  4tb
  00XXXXXX            68,719,476,736	 64gb
  000XXXXX             1,073,741,824	  1gb	32bit
  0000XXXX                16,777,216	 16mb	24bit
  00000XXX                   262,144	256kb
  000000XX                      4096

bits:
24                 16,777,216	FFFF FF
32              2,147,483,647	FFFF FFFF
48        281,474,976,710,656	FFFF FFFF FFFF
56     64pb			FFFF FFFF FFFF FF
60  1,152,921,504,606,846,976	FFFF FFFF FFFF FFF
64  9,223,372,036,854,775,808	FFFF FFFF FFFF FFFF
 u 18,446,744,073,709,551,615	FFFF FFFF FFFF FFFF


AAAAAAAAAABBBBBB	60-bit <64gb
AAAAAAAAAA0000BB
AAAAAAAAAA!0BBBB	block/content
AAAAAAAAAABB!CCC	64gb-4tb +256kb
AAAAAAAAAAAAAA!!	90bit=11char literals
ABCD!!!!!!!!!!!!
0!!!!!!!!!!!!!!!
0000000000000000

url safety:
safe		- _ .
no url encoding	- _ . , + ! $ * ' ( )
encode after ?	: @ & $ = + ,
file unsafe   	: \ / < > | * " '
gatewaysmodify	[ ] { } ~ ^ `
encoding	# %

base64decode.org  base64encode.org
https://www.codeproject.com/articles/27493/convert-an-integer-to-a-base-string-and-back-ag

0  0
1  1
2  2
3  3
4  4
5  5
6  6
7  7
8  8
9  9
A 10
B 11
C 12
D 13
E 14
F 15
G 16
H 17
I 18
J 19
K 20
L 21
M 22
N 23
O 24
P 25
Q 26
R 27
S 28
T 29
U 30
V 31
W 32
X 33
Y 34
Z 35
a 36
b 37
c 38
d 39
e 40
f 41
g 42
h 43
i 44
j 45
k 46
l 47
m 48
n 49
o 50
p 51
q 52
r 53
s 54
t 55
u 56
v 57
w 58
x 59
y 60
z 61
+ 62
- 63
